
addpath('../../neural-network-octave');

X = [[0 0 0 0];
[0 0 0 1];
[0 0 1 0];
[0 0 1 1];
% [0 1 0 0];
[0 1 0 1];
[0 1 1 0];
[0 1 1 1];
[1 0 0 0];
[1 0 0 1];
[1 0 1 0];
% [1 0 1 1];
[1 1 0 0];
[1 1 0 1];
[1 1 1 0];
[1 1 1 1]
];

y = [[1 0]; [0 1]; [1 0]; [0 1];
% [1; 0];
[0 1]; [1 0]; [0 1];
[1 0]; [0 1]; [1 0];
% [0; 1];
[1 0]; [0 1]; [1 0]; [0 1]];


cellW = randomWeights(X, [8; 6], y);

[ J, cellW ] = neuralNetwork(X, cellW, y, 100, 3.4);

save('odd-even.mat', 'cellW', 'J');

printf('Trained!!!\n');
